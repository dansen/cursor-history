name: Release Build

on:
  push:
    tags:
      - 'v*'  # 当推送 v 开头的标签时触发

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        shell: bash

      - name: Build
        run: |
          mkdir build
          go build -v -ldflags="-s -w -H windowsgui -X cursor_history/internal/app.Version=${{ env.VERSION }}" -trimpath -o build/vscodehelper.exe

      - name: Create Installer
        run: |
          .\bin\ISCC.exe /DAppVersion=${{ env.VERSION }} /O"build" "installer.iss"

      - name: Upload to Aliyun OSS
        env:
          ALIYUN_ACCESS_KEY_ID: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
          ALIYUN_ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
          OSS_BUCKET: ${{ secrets.OSS_BUCKET }}
          OSS_ENDPOINT: ${{ secrets.OSS_ENDPOINT }}
        run: |
          # 获取版本号（从 tag 中提取）
          $VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
          
          # 上传安装包到 OSS
          .\aliyun.exe oss cp "installer\CursorHistory_Setup_$VERSION.exe" "oss://$env:OSS_BUCKET/CursorHistory/releases/CursorHistory_Setup_$VERSION.exe" `
            --access-key-id "$env:ALIYUN_ACCESS_KEY_ID" `
            --access-key-secret "$env:ALIYUN_ACCESS_KEY_SECRET" `
            --endpoint "$env:OSS_ENDPOINT"
            
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            installer/CursorHistory_Setup_*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 